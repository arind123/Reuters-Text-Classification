
                                                       .................................
                              ################################# Useful commands ############################
                                                       .................................
$ git init              ----------> Initialize Local git repository
$ git add <file>        ----------> Add files to index
$ git status            ----------> Check status of working Tree
$ git commit <file> -m  ----------> Commit changes in Index ('-m' is to provide a messege wile comitting) 
$ git push              ----------> Push to remote repository
$ git pull              ----------> Pull latest from remote repository
$ git clone             ----------> Clone repository into new direction    

## TO ADD MULTIPLE FILES AT ONCE##

$ git add -A     ----------> To add multiple files at an instance
$ git commit -a -m ----------> TO commit multiple files at once

## TO SEE THE GIT UPDATES THAT HAS BEEN DONE ##

$ git log
                                                       ..........................................
################################################################ Step by step changing ###############################################################
                                                       ..........................................
1. Go to the folder then right click and "open in git bash"(for Windows in office) / "open in terminal"(for home Ubuntu).

2. use: git init.

3. git remote add <name you want to give to your central repository> <the origin> e.g. git remote add origin https://github.com/arind123/arinML1.git 
   *imp. : Before you pull(next step) you cannot see anything neither can you push to origin repository from your local repository. You may or may not 		use "" ,while typing origin https link.

4. next use: git pull origin master (from the origin to the master(in your local repository) )

5: next use: git status ---> shows the changes in files that are yet to be committed

6: next : git add <file name> e.g.: git add Git_Help 

7. next: commit the change using git commit Git commit Git_Help -m
	* one can add/commit multiple file using commands: git add -A/ git commit -a -m   (Remember the distinction between 'a' and 'A')
                                                         ..................................
                         ######################################## Branches and all ###########################
                                                         ..................................
1. To create a branch from master use: git branch <branch name> e.g. git branch firstbranch

2. To switch to the created branch use: git checkout firstbranch
	* now if we go back to the folder, what it is showing, is of the branch, created from the master.

3. Similarly as before using command mentioned in "Step by step changing" we can add and commit changes to the first branch *BUT* they will not be yet showing up in master.

4. To move back to te master use: git checkout master
                                            .............................................................................
                       ################################ NEXT WE NEED TO MERGE THE BRANCHES TO THE MASTER ##############################
                                            .............................................................................
FIRST AND FOREMOST,MAKE SURE YOU ARE IN THE MASTER BRANCH. 
To merge use: git merge <branchname> e.g.: git merge firstbranch


Then, we can go back to firstbranch again, it will not show in master unless and until you merge it again.

*If you had already indexed a change before YOU DO NOT NEED TO add it again and then commit, one can simply use: git commit -a -m "<messege>".


Then, we can go back to firstbranch again, it will not show in master unless and until you merge it again.


*If you had already indexed a change before YOU DO NOT NEED TO add it again and then commit, one can simply use: git commit -a -m "<messege>".

                                       ...................................................................
            ######################################################### Rebase #####################################################
                                       ...................................................................

use command: git rebase master --> from the firstbranch./ git rebase firstbranch -->from the master
                                                             ............................................
                                                     ################## To Push( the final one ) ###################
                                                             ............................................
1. create kegen verify: ssh keygen
2. Then push from the branch or masterwhatecer you wish(prefereably branch so that the master remains intact.. to be discussed more).
    use:  git push origin <branchname> e.g. git push origin firstbranch

                                  ...............................................................................
                    ###################### Revert back(Not tried hand on,, too tired feeling sleepyy.. :)) ##################
                                  ...............................................................................
1. use command: git checkout <the first 8 digits of the commit command key from git log as to where it was changed> <name of the file>

 
########################## Git use old key ###################

1.
sudo chmod 600 ~/.ssh/id_rsa
sudo chmod 600 ~/.ssh/id_rsa.pub
# start the ssh-agent in the background
eval $(ssh-agent -s)
# make ssh agent to actually use copied key
ssh-add ~/.ssh/id_rsa

2.
or simply use push command if already used commands. (not sure about this one though may be if everything is rightly done it will work)






  

